@page
@using K9_Koinz.Models.Helpers
@using K9_Koinz.Utils
@using System.Text.Json
@model K9_Koinz.Pages.Transactions.DeleteModel

@{
    ViewData["Title"] = "Delete Transaction";

    var payloadString = Request.Cookies["backToTransactions"];
    var payload = JsonSerializer.Deserialize<TransactionNavPayload>(payloadString);
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Transaction</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Account)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.AccountName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Date)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.Date)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.MerchantId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.MerchantName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.CategoryName)
        </dd>
        @if (Model.Record.TagId.HasValue) {
            var style = "background-color: " + Model.Record.Tag.HexColor + "; text-decoration: none";

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Record.TagId)
            </dt>
            <dd class="col-sm-10">
                <span class="badge badge-primary" style="@style">@Model.Record.Tag.ShortForm</span>
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Amount)
        </dt>
        <dd class="col-sm-10">
            @Model.Record.Amount.FormatCurrency(2)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.Notes)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.IsSavingsSpending)
        </dt>
        <dd class="col-sm-10">
            @(Model.Record.IsSavingsSpending ? "Yes" : "No")
        </dd>
    </dl>

    @if (Model.Record.TransferId.HasValue) {
        <p>Deleting this transaction will also delete these other transactions:</p>
        <table class="table">
            <thead>
                <tr>
                    <th>Account</th>
                    <th>Merchant</th>
                    <th>Category</th>
                    <th>Amount</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var other in Model.Record.Transfer.Transactions.Where(trans => trans.Id != Model.Record.Id)) {
                    <tr>
                        <td>@other.AccountName</td>
                        <td>@other.MerchantName</td>
                        <td>@other.CategoryName</td>
                        <td>@other.Amount.FormatCurrency(2)</td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <form method="post">
        <input type="hidden" asp-for="Record.Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-page="/Transactions/Index"
           asp-route-sortOrder="@payload.SortOrder"
           asp-route-catFilter="@payload.CatFilter"
           asp-route-pageIndex="@payload.PageIndex"
           asp-route-accountFilter="@payload.AccountFilter"
           asp-route-minDate="@payload.MinDate"
           asp-route-maxDate="@payload.MaxDate"
           asp-route-merchFilter="@payload.MerchFilter">
            Back to List
        </a>
    </form>
</div>
