@page
@using K9_Koinz.Models.Helpers
@using K9_Koinz.Utils
@using System.Text.Json
@model K9_Koinz.Pages.Transactions.IndexModel

@{
    ViewData["Title"] = "Transactions List";
}

<h1>Your Transactions</h1>

<p>
    <a asp-page="@PagePaths.TransactionCreate" class="no-underline-ever">
        <span class="btn btn-success btn-sm">
            <i class="fa-solid fa-plus"></i> Create New
        </span>
    </a>

    <a asp-page="@PagePaths.TransferManage" class="no-underline-ever">
        <span class="btn btn-success btn-sm">
            <i class="fa-solid fa-arrow-right-arrow-left"></i> Manage Transfers
        </span>
    </a>

    <a asp-page="@PagePaths.TransactionPrint" class="no-underline-ever">
        <span class="btn btn-success btn-sm">
            <i class="fa-solid fa-print"></i> Print View
        </span>
    </a>
</p>

<div class="row">
    <div class="col-lg-3">
        <form asp-page="@PagePaths.TransactionIndex" method="get">
            <div class="form-actions no-color">
                <div class="form-group mb-3">
                    <label for="searchString">Search</label>
                    <input id="searchString" type="text" name="searchString" value="@Model.SearchText" class="form-control" />
                </div>
                <div class="accordion accordion-flush" id="advancedSearch">
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingOne">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne">
                                Advanced Search
                            </button>
                        </h2>

                        <div id="collapseOne" class="accordion-collapse collapse" data-bs-parent="#advancedSearch">
                            <div class="accordion-body">

                                <div class="form-group mb-3">
                                    <label for="dteStart">Start Date</label>
                                    <input id="dteStart" type="date" name="minDate" value="@Model.MinDateString" class="form-control" />
                                </div>
                                <div class="form-group mb-3">
                                    <label for="dteEnd">End Date</label>
                                    <input id="dteEnd" type="date" name="maxDate" value="@Model.MaxDateString" class="form-control" />
                                </div>

                                <div class="form-group mb-3">
                                    <label for="cbxAccounts">Account Filter</label>
                                    <select id="cbxAccounts" name="accountFilter" asp-for="AccountFilter" asp-items="Model.AccountOptions" class="form-control">
                                        <option value=" " selected>Select an Account...</option>
                                    </select>
                                </div>

                                <div class="form-group mb-3">
                                    <label for="lbxCategories">Category Filter</label>
                                    <select id="lbxCategories" name="catFilter" asp-for="CategoryFilters" asp-items="Model.CategoryOptions" size="15" class="form-control"></select>
                                </div>

                                <div class="form-group mb-3">
                                    <label for="txtMerchant" class="control-label">Merchant Filter</label>
                                    <input id="txtMerchant" class="form-control" placeholder="Enter a Merchant" />
                                    <input asp-for="MerchantFilter" name="merchFilter" type="hidden" id="hfMerchant" value="" />
                                </div>

                                <div class="form-group mb-3 d-block d-lg-none">
                                    <label for="cbxSort">Sort By</label>
                                    <select id="cbxSort" name="sortOrder" asp-for="CurrentSort" class="form-control">
                                        <option value="" selected disabled>Select a Sort Option...</option>
                                        <option value="Date">Date (Oldest First)</option>
                                        <option value="date_desc">Date (Newest First)</option>
                                        <option value="Merchant">Merchant (A-Z)</option>
                                        <option value="merchant_desc">Merchant (Z-A)</option>
                                        <option value="Amount">Amount (Smallest First)</option>
                                        <option value="amount_desc">Amount (Largest First)</option>
                                    </select>
                                </div>

                                <div class="form-group">
                                    <div class="form-check form-switch">
                                        @Html.EditorFor(x => x.HideTransfers, new { htmlAttributes = new { @class = "form-check-input" } })
                                        <label class="form-check-label" asp-for="HideTransfers"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-3">
                <input type="submit" value="Go" class="btn btn-primary" /> <a class="btn btn-secondary" asp-page="@PagePaths.TransactionIndex">Back to full list</a>
            </div>
        </form>
    </div>

    <div class="col-lg-9">
        <div class="d-none d-lg-block">
            <table class="table">
                <thead>
                    <tr>
                        <th class="d-none d-xl-block">
                            @Html.DisplayNameFor(model => model.Transactions[0].Account)
                        </th>
                        <th>
                            <a asp-page="@PagePaths.TransactionIndex" asp-route-sortOrder="@Model.DateSort"
                               asp-route-catFilter="@Model.SelectedCategory"
                               asp-route-accountFilter="@Model.SelectedAccount"
                               asp-route-minDate="@Model.MinDateString"
                               asp-route-maxDate="@Model.MaxDateString"
                               asp-route-merchFilter="@Model.SelectedMerchant"
                               asp-route-pageIndex="@Model.Transactions.PageIndex">
                                @Html.DisplayNameFor(model => model.Transactions[0].Date)
                            </a>

                            @if (Model.CurrentSort == "date_desc" || string.IsNullOrEmpty(Model.CurrentSort)) {
                                <text>&nbsp;</text>

                                <i class="fa-solid fa-arrow-down-wide-short"></i>
                            }

                            @if (Model.CurrentSort == "Date") {
                                <text>&nbsp;</text>
                                <i class="fa-solid fa-arrow-up-short-wide"></i>
                            }
                        </th>
                        <th>
                            <a asp-page="@PagePaths.TransactionIndex" asp-route-sortOrder="@Model.MerchantSort"
                               asp-route-catFilter="@Model.SelectedCategory"
                               asp-route-accountFilter="@Model.SelectedAccount"
                               asp-route-minDate="@Model.MinDateString"
                               asp-route-maxDate="@Model.MaxDateString"
                               asp-route-merchFilter="@Model.SelectedMerchant"
                               asp-route-pageIndex="@Model.Transactions.PageIndex">
                                @Html.DisplayNameFor(model => model.Transactions[0].MerchantId)
                            </a>

                            @if (Model.CurrentSort == "merchant_desc") {
                                <text>&nbsp;</text>

                                <i class="fa-solid fa-arrow-down-wide-short"></i>
                            }

                            @if (Model.CurrentSort == "Merchant") {
                                <text>&nbsp;</text>
                                <i class="fa-solid fa-arrow-up-short-wide"></i>
                            }
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Transactions[0].Category)
                        </th>
                        <th>
                            <a asp-page="@PagePaths.TransactionIndex" asp-route-sortOrder="@Model.AmountSort"
                               asp-route-catFilter="@Model.SelectedCategory"
                               asp-route-accountFilter="@Model.SelectedAccount"
                               asp-route-minDate="@Model.MinDateString"
                               asp-route-maxDate="@Model.MaxDateString"
                               asp-route-merchFilter="@Model.SelectedMerchant"
                               asp-route-pageIndex="@Model.Transactions.PageIndex">
                                @Html.DisplayNameFor(model => model.Transactions[0].Amount)
                            </a>

                            @if (Model.CurrentSort == "amount_desc") {
                                <text>&nbsp;</text>

                                <i class="fa-solid fa-arrow-down-wide-short"></i>
                            }

                            @if (Model.CurrentSort == "Amount") {
                                <text>&nbsp;</text>
                                <i class="fa-solid fa-arrow-up-short-wide"></i>
                            }
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Transactions) {
                        var hasNotes = !string.IsNullOrEmpty(item.Notes) ? "tooltip" : string.Empty;
                        <tr data-bs-toggle="@hasNotes" data-bs-title="Notes: @item.Notes" data-bs-placement="left">
                            <td class="d-none d-xl-block">
                                @Html.DisplayFor(modelItem => item.AccountName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td>
                                <a asp-page="@PagePaths.MerchantDetails" asp-route-id="@item.MerchantId" class="link-unstyled">
                                    @if (item.TagId.HasValue) {
                                        var style = "background-color: " + item.Tag.HexColor + "; text-decoration: none";
                                        <span class="badge badge-primary" style="@style">@item.Tag.ShortForm</span>
                                    }
                                    @if (item.IsSavingsSpending) {
                                        <i class="fa-solid fa-eye-slash"></i>
                                    }
                                    @if (item.IsSplit) {
                                        <i class="fa-solid fa-arrows-split-up-and-left"></i>
                                    }
                                    @if (item.ParentTransactionId.HasValue) {
                                        <i class="fa-solid fa-sitemap"></i>
                                    }
                                    @if (item.BillId.HasValue) {
                                        <i class="fa-regular fa-money-bill-1"></i>
                                    }
                                    @Html.DisplayFor(modelItem => item.MerchantName)
                                </a>
                            </td>
                            <td>
                                <a asp-page="@PagePaths.CategoryDetails" asp-route-id="@item.CategoryId" class="link-unstyled">
                                    @if (!string.IsNullOrEmpty(item.CategoryIcon)) {
                                        <i class="fa-solid @item.CategoryIcon"></i>
                                    }
                                    @Html.DisplayFor(modelItem => item.CategoryName)
                                </a>
                            </td>
                            <td>
                                @if (item.TransactionType == Models.TransactionType.PLUS) {
                                    <span class="text-success">
                                        @Math.Abs(item.Amount).FormatCurrency()
                                    </span>
                                } else {
                                    <span class="text-danger">
                                        @Math.Abs(item.Amount).FormatCurrency()
                                    </span>
                                }
                            </td>
                            <td>
                                <a asp-page="@PagePaths.TransactionEdit" asp-route-id="@item.Id"><i class="fa-solid fa-pencil"></i></a>
                                <a asp-page="@PagePaths.TransactionDetails" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i></a>
                                <a asp-page="@PagePaths.TransactionDelete" asp-route-id="@item.Id"><i class="fa-solid fa-trash"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card mt-4 d-block d-lg-none">
            <ul class="list-group list-group-flush">
                @foreach (var transaction in Model.Transactions) {
                    <li class="list-group-item">
                        <div>
                            <div class="row">
                                <div class="col-7 text-truncate transaction-item" data-id="@transaction.Id">
                                    @if (transaction.TagId.HasValue) {
                                        var style = "background-color: " + transaction.Tag.HexColor + "; text-decoration: none";
                                        <span class="badge badge-primary" style="@style">@transaction.Tag.ShortForm</span>
                                    }
                                    @if (transaction.IsSavingsSpending) {
                                        <i class="fa-solid fa-eye-slash"></i>
                                    }
                                    @if (transaction.IsSplit) {
                                        <i class="fa-solid fa-arrows-split-up-and-left"></i>
                                    }
                                    @if (transaction.ParentTransactionId.HasValue) {
                                        <i class="fa-solid fa-sitemap"></i>
                                    }
                                    @if (transaction.BillId.HasValue) {
                                        <i class="fa-regular fa-money-bill-1"></i>
                                    }
                                    @transaction.MerchantName
                                </div>
                                <div class="col-4 text-end transaction-item" data-id="@transaction.Id">
                                    @if (transaction.TransactionType == Models.TransactionType.PLUS) {
                                        <span class="text-success">
                                            @Math.Abs(transaction.Amount).FormatCurrency()
                                        </span>
                                    } else {
                                        <span class="text-danger">
                                            @Math.Abs(transaction.Amount).FormatCurrency()
                                        </span>
                                    }
                                </div>
                                <div class="col-1">
                                    <a asp-page="@PagePaths.TransactionEdit" asp-route-id="@transaction.Id"><i class="fa-solid fa-pencil text-primary"></i></a>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-7 text-secondary transaction-item" data-id="@transaction.Id">
                                    @transaction.CategoryName
                                    @if (!string.IsNullOrEmpty(transaction.CategoryIcon)) {
                                        <i class="fa-solid @transaction.CategoryIcon"></i>
                                    }
                                </div>
                                <div class="col-4 text-secondary text-end transaction-item" data-id="@transaction.Id">@transaction.Date.FormatShortString()</div>
                                <div class="col-1">
                                    <a asp-page="@PagePaths.TransactionDelete" asp-route-id="@transaction.Id"><i class="fa-solid fa-trash text-danger"></i></a>
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>

        <div class="mt-4">
            <p>
                @Model.Transactions.TotalCount <text>Items - </text> Page @Model.Transactions.PageIndex of @Model.Transactions.TotalPages
            </p>
            @{
                var prevDisabled = !Model.Transactions.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.Transactions.HasNextPage ? "disabled" : "";
            }

            <a asp-page="@PagePaths.TransactionIndex" asp-route-sortOrder="@Model.CurrentSort"
               asp-route-catFilter="@Model.SelectedCategory"
               asp-route-accountFilter="@Model.SelectedAccount"
               asp-route-pageIndex="@(Model.Transactions.PageIndex - 1)"
               asp-route-minDate="@Model.MinDateString"
               asp-route-maxDate="@Model.MaxDateString"
               asp-route-merchFilter="@Model.SelectedMerchant"
               class="btn btn-primary @prevDisabled">
                Previous
            </a>

            <a asp-page="@PagePaths.TransactionIndex" asp-route-sortOrder="@Model.CurrentSort"
               asp-route-catFilter="@Model.SelectedCategory"
               asp-route-accountFilter="@Model.SelectedAccount"
               asp-route-pageIndex="@(Model.Transactions.PageIndex + 1)"
               asp-route-minDate="@Model.MinDateString"
               asp-route-maxDate="@Model.MaxDateString"
               asp-route-merchFilter="@Model.SelectedMerchant"
               class="btn btn-primary @nextDisabled">
                Next
            </a>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/mobileListInteraction.js"></script>

    <script>
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
    </script>
}