@page
@using K9_Koinz.Utils
@model K9_Koinz.Pages.Transactions.Split.CreateModel

@{
    ViewData["Title"] = "Split Transaction";
}

<h1>Split Transaction</h1>
<hr />

<span class="text-danger">
    @Model.ErrorMessage
</span>

<h4>Parent Transaction</h4>
<dl class="row">
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.ParentTransaction.Account)
    </dt>
    <dd class="col-sm-9">
        <a asp-page="@PagePaths.AccountDetails" asp-route-id="@Model.ParentTransaction.AccountId" class="link-unstyled">
            @Html.DisplayFor(model => model.ParentTransaction.AccountName)
        </a>
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.ParentTransaction.Date)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.ParentTransaction.Date)
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.ParentTransaction.MerchantId)
    </dt>
    <dd class="col-sm-9">
        <a asp-page="@PagePaths.MerchantDetails" asp-route-id="@Model.ParentTransaction.MerchantId" class="link-unstyled">
            @Html.DisplayFor(model => model.ParentTransaction.MerchantName)
        </a>
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.ParentTransaction.Category)
    </dt>
    <dd class="col-sm-9">
        <a asp-page="@PagePaths.CategoryDetails" asp-route-id="@Model.ParentTransaction.CategoryId" class="link-unstyled">
            @Html.DisplayFor(model => model.ParentTransaction.CategoryName)
        </a>
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.ParentTransaction.Amount)
    </dt>
    <dd class="col-sm-9">
        @Model.ParentTransaction.Amount.FormatCurrency(2)
    </dd>
    <dt class="col-sm-3">
        @Html.DisplayNameFor(model => model.ParentTransaction.Notes)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.ParentTransaction.Notes)
    </dd>
</dl>

<h4>Split Transactions</h4>
<form method="post">
    <table class="table" id="splitTransTable">
        <thead>
            <tr>
                @if (Model.ParentTransaction.Category.CategoryType == CategoryType.TRANSFER) {
                    <th>Savings Goal</th>
                } else {
                    <th>@Html.DisplayNameFor(row => Model.ParentTransaction.CategoryId)</th>
                }
                <th>@Html.DisplayNameFor(row => Model.ParentTransaction.Amount)</th>
                <th>@Html.DisplayNameFor(row => Model.ParentTransaction.Notes)</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @for (var i = 0; i < Model.SplitTransactions.Count(); i++) {
                <tr data-index="@i">
                    <input type="hidden" asp-for="SplitTransactions[i].Id" />
                    <input type="hidden" asp-for="SplitTransactions[i].AccountId" />
                    <input type="hidden" asp-for="SplitTransactions[i].TagId" />
                    <input type="hidden" asp-for="SplitTransactions[i].Date" />
                    <input type="hidden" asp-for="SplitTransactions[i].ParentTransactionId" />
                    <input type="hidden" asp-for="SplitTransactions[i].MerchantId" />
                    <td>
                        @if (Model.ParentTransaction.Category.CategoryType == CategoryType.TRANSFER) {
                            <select class="form-control cbxSavingsGoal" asp-for="SplitTransactions[i].SavingsGoalId" data-index="@i" id="cbxSavingsGoal-@i" asp-items="@Model.SavingsGoalsList">
                                <option value="" selected disabled>Select a Savings Goal...</option>
                            </select>
                        } else {
                            <input class="form-control txtCategory" data-index="@i" id="txtCategory-@i" value="@Model.SplitTransactions[i].CategoryName" />
                            <input asp-for="SplitTransactions[i].CategoryId" type="hidden" class="hfCategory" data-index="@i" id="hfCategory-@i" />
                        }
                    </td>
                    <td>
                        <input asp-for="SplitTransactions[i].Amount" class="form-control txtAmount" data-index="@i" id="txtAmount-@i" size="4" />
                    </td>
                    <td>
                        <input asp-for="SplitTransactions[i].Notes" rows="1" class="form-control" />
                    </td>
                    <td>
                        <div class="row">
                            <a class="btn btn-success btnAddRow" data-index="@i" id="btnAddRow-@i" style="--bs-btn-padding-y: 0.1rem; --bs-btn-padding-x: 0.1rem; --bs-btn-font-size: 0.5rem">
                                <i class="fa-solid fa-plus"></i>
                            </a>
                        </div>
                        <div class="row mt-1">
                            <a class="btn btn-danger btnRemoveRow" data-index="@i" id="btnRemoveRow-@i" style="--bs-btn-padding-y: 0.1rem; --bs-btn-padding-x: 0.1rem; --bs-btn-font-size: 0.5rem">
                                <i class="fa-solid fa-minus"></i>
                            </a>
                        </div>

                    </td>
                </tr>
            }

            <tr>
                <td></td>
                <td>
                    <input type="text" readonly style="background-color: #eaeaea" id="txtTotalAmount" class="form-control" size="4" />
                </td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    </table>
    <button type="submit" class="btn btn-primary my-2" id="btnSave">
        <i class="fa-solid fa-floppy-disk"></i> Confirm
    </button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        var maxRows = @Model.SplitTransactions.Count;
        var parentTransaction = @Html.Raw(Model.ParentTransaction.ToJson());
    </script>

    <script src="~/js/splitTransactionCalculator.js"></script>
    <script src="~/js/splitTransactionAutocomplete.js"></script>
}