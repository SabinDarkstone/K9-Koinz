@page
@addTagHelper*, Microsoft.AspnetCore.Mvc.TagHelpers
@model K9_Koinz.Pages.Transactions.CreateModel

@{
    ViewData["Title"] = "Create New Transaction";
}

<h1>Create</h1>

<h4>Transaction</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Record.AccountId" class="control-label"></label>
                <select asp-for="Record.AccountId" class="form-control" asp-items="@Model.AccountOptions">
                    <option value="" selected disabled>Select an Account...</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Record.Date" class="control-label"></label>
                <input asp-for="Record.Date" class="form-control" />
                <span asp-validation-for="Record.Date" class="text-danger"></span>
            </div>
            <div class="row align-items-end">
                <div class="form-group col-8">
                    <label asp-for="Record.MerchantId" class="control-label"></label>
                    <input id="txtMerchant" class="form-control" />
                    <input asp-for="Record.MerchantId" type="hidden" id="hfMerchant" />
                    <span asp-validation-for="Record.MerchantId" class="text-danger"></span>
                </div>
                <div class="form-group col-4" style="text-align: right">
                    <a class="btn btn-outline-primary" id="btnAddMerchant">Add New</a>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Record.CategoryId" class="control-label"></label>
                <input id="txtCategory" class="form-control" />
                <input asp-for="Record.CategoryId" type="hidden" id="hfCategory" />
                <span asp-validation-for="Record.CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Record.TagId" class="control-label"></label>
                <select asp-for="Record.TagId" class="form-control" asp-items="@Model.TagOptions">
                    <option value="@Guid.Empty" selected>No Tag</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Record.Amount" class="control-label"></label>
                <input asp-for="Record.Amount" class="form-control" />
                <span asp-validation-for="Record.Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Record.Notes" class="control-label"></label>
                <textarea asp-for="Record.Notes" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Record.Notes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="Record.IsSavingsSpending" />
                <label asp-for="Record.IsSavingsSpending" class="control-label"></label>
                <span asp-validation-for="Record.IsSavingsSpending" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary my-2">
                    <i class="fa-solid fa-floppy-disk"></i> Create
                </button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
          rel="Stylesheet" type="text/css" />

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(function () {
            $("#txtMerchant").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Transactions/Create?handler=MerchantAutoComplete",
                        data: { text: request.term },
                        type: "GET",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(JSON.stringify(response));
                        },
                        failure: function (response) {
                            alert(JSON.stringify(response));
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfMerchant").val(i.item.val);
                },
                minLength: 1
            });

            $("#btnAddMerchant").click((evt) => {
                const text = $("#txtMerchant").val();
                console.log(text);
                $.ajax({
                    url: "/Transactions/Create?handler=AddMerchant",
                    data: { text: text },
                    type: "GET",
                    success: function (data) {
                        console.log(data);
                        if (data == 'DUPLICATE') {
                            setTimeout(() => {
                                $(evt.target).text("Add New");
                                $(evt.target).toggleClass("btn-success btn-warning");
                            }, 2000);

                            $(evt.target).text("Duplicate!");
                            $(evt.target).toggleClass("btn-success btn-warning");
                        } else if (data == 'ERROR') {
                            setTimeout(() => {
                                $(evt.target).text("Add New");
                                $(evt.target).toggleClass("btn-success btn-danger");
                            }, 2000);

                            $(evt.target).text("Error!");
                            $(evt.target).toggleClass("btn-success btn-danger");
                        } else {
                            $(evt.target).text("Success!");
                            $("#hfMerchant").val(data);
                        }
                    }
                })
            })

            $("#txtCategory").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Transactions/Create?handler=CategoryAutoComplete",
                        data: { text: request.term },
                        type: "GET",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(JSON.stringify(response));
                        },
                        failure: function (response) {
                            alert(JSON.stringify(response));
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfCategory").val(i.item.val);
                },
                minLength: 1
            });
        });
    </script>
}
