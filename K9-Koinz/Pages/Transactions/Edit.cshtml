@page
@using K9_Koinz.Models.Helpers
@using K9_Koinz.Utils
@using System.Text.Json
@model K9_Koinz.Pages.Transactions.EditModel

@{
    ViewData["Title"] = "Edit Transaction";

    var payloadString = Request.Cookies["backToTransactions"];
    var payload = new TransactionNavPayload();
    if (!string.IsNullOrEmpty(payloadString)) {
        payload = JsonSerializer.Deserialize<TransactionNavPayload>(payloadString);
    }
}

<h1>Edit</h1>

<h4>Transaction</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Record.Id" />
            <input type="hidden" asp-for="Record.TransferId" />
            <input type="hidden" asp-for="Record.IsSplit" />
            <div class="form-group form-floating">
                <select asp-for="Record.AccountId" class="form-control" asp-items="@Model.AccountOptions">
                    <option value="" selected disabled>Select an Account...</option>
                </select>
                <label asp-for="Record.AccountId"></label>
            </div>
            <div class="form-group form-floating">
                <input asp-for="Record.Date" class="form-control" value="@Model.Record.Date.FormatForUrl()" placeholder="Date" />
                <label asp-for="Record.Date"></label>
                <span asp-validation-for="Record.Date" class="text-danger"></span>
            </div>
            <div class="form-group form-floating">
                <input id="txtMerchant" class="form-control" value="@Model.Record.MerchantName" placeholder="Merchant">
                <label asp-for="Record.MerchantId"></label>
                <input asp-for="Record.MerchantId" type="hidden" id="hfMerchant" />
                <span asp-validation-for="Record.MerchantId" class="text-danger"></span>
            </div>
            <div class="form-group form-floating">
                @if (Model.Record.IsSplit) {
                    <input id="txtCategory" class="form-control" value="@Model.Record.CategoryName" disabled />
                } else {
                    <input id="txtCategory" class="form-control" value="@Model.Record.CategoryName" placeholder="Category" />
                }
                <label asp-for="Record.CategoryId"></label>
                <input asp-for="Record.CategoryId" type="hidden" id="hfCategory" />
                <span asp-validation-for="Record.CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group form-floating">
                <select asp-for="Record.TagId" class="form-control" asp-items="@Model.TagOptions">
                    <option value="@Guid.Empty">No Tag</option>
                </select>
                <label asp-for="Record.TagId"></label>
            </div>
            <div class="form-group form-floating">
                <input asp-for="Record.Amount" class="form-control" placeholder="Amount" id="txtAmount"/>
                <label asp-for="Record.Amount"></label>
                <span asp-validation-for="Record.Amount" class="text-danger"></span>
            </div>
            @if (Model.Record.Category.CategoryType != Models.CategoryType.EXPENSE) {
                <div class="form-group form-floating">
                    <select asp-for="Record.SavingsGoalId" class="form-control" asp-items="@Model.GoalOptions">
                        <option value="@Guid.Empty">No Goal</option>
                    </select>
                    <label asp-for="Record.SavingsGoalId"></label>
                </div>
            } else {
                <div class="form-group form-floating">
                    <select asp-for="Record.BillId" class="form-control" asp-items="@Model.BillOptions">
                        <option value="@Guid.Empty">No Bill</option>
                    </select>
                    <label asp-for="Record.BillId"></label>
                </div>
            }
            <div class="form-group form-floating">
                <textarea asp-for="Record.Notes" class="form-control" style="height:150px" placeholder="Notes"></textarea>
                <label asp-for="Record.Notes"></label>
                <span asp-validation-for="Record.Notes" class="text-danger"></span>
            </div>
            @if (Model.Record.Date.Date == Model.Record.Account.InitialBalanceDate.Date) {
                <div class="form-group">
                    <label asp-for="Record.DoNotSkip" class="control-label"></label>
                    <input asp-for="Record.DoNotSkip" />
                    <span asp-validation-for="Record.DoNotSkip" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <div class="form-check form-switch">
                    @Html.EditorFor(x => x.Record.IsSavingsSpending, new { htmlAttributes = new { @class = "form-check-input" } })
                    <label class="form-check-label" asp-for="Record.IsSavingsSpending"></label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="@PagePaths.TransactionIndex"
       asp-route-sortOrder="@payload.SortOrder"
       asp-route-catFilter="@payload.CatFilter"
       asp-route-pageIndex="@payload.PageIndex"
       asp-route-accountFilter="@payload.AccountFilter"
       asp-route-minDate="@payload.MinDate"
       asp-route-maxDate="@payload.MaxDate"
       asp-route-merchFilter="@payload.MerchFilter">
        Back to List
    </a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(changeAmountColor($("#txtAmount")));

        $("#txtAmount").on("keyup touchend", function () {
            changeAmountColor($(this));
        });
    </script>
}
