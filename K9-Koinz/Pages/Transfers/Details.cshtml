@page
@using K9_Koinz.Utils
@model K9_Koinz.Pages.Transfers.DetailsModel


<h1>Details</h1>

<div>
    <h4>Transfer</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.FromAccountId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.FromAccount.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.ToAccountId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.ToAccount.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.CategoryId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.Category.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.MerchantId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.Merchant.Name)
        </dd>
        @if (Model.Record.SavingsGoalId.HasValue && !Model.Record.IsSplit) {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Record.SavingsGoalId)
            </dt>
            <dd class="col-sm-10">
                @if (Model.Record.SavingsGoal.SavingsType == SavingsType.BUCKET) {
                    <a asp-page="@PagePaths.SavingsBucketDetails" asp-route-id="@Model.Record.SavingsGoalId" class="no-underline">
                        @Html.DisplayFor(model => model.Record.SavingsGoal.Name)
                    </a>
                } else if (Model.Record.SavingsGoal.SavingsType == SavingsType.GOAL) {
                    <a asp-page="@PagePaths.SavingsGoalDetails" asp-route-id="@Model.Record.SavingsGoalId" class="no-underline">
                        @Html.DisplayFor(model => model.Record.SavingsGoal.Name)
                    </a>
                }
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Amount)
        </dt>
        <dd class="col-sm-10">
            @Model.Record.Amount.FormatCurrency(2)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.Notes)
        </dd>

        @await Component.InvokeAsync(nameof(Components.DateFields), new {
            record = Model.Record
        })
    </dl>

    @if (Model.Record.Transactions.Any() && Model.Record.IsSplit) {
        <h4>Split Savings Goals</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Savings Goal</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var trans in Model.Record.ToTransaction.SplitTransactions) {
                    <tr>
                        <td>@trans.SavingsGoalName</td>
                        <td>@trans.Amount.FormatCurrency(2)</td>
                    </tr>
                }
            </tbody>
        </table>
    } else if (Model.Record.Transactions.Any() && !Model.Record.IsSplit) {
        <h4>Transactions</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Account</th>
                    <th>Amount</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var trans in Model.Record.Transactions) {
                    <tr>
                        <td>
                            <span class="badge bg-secondary">
                                @if (Model.Record.ToTransaction.Id == trans.Id) {
                                    <text>To</text>
                                } else {
                                    <text>From</text>
                                }
                            </span>
                            @trans.AccountName
                        </td>
                        <td>@trans.Amount.FormatCurrency(2)</td>
                        <td>
                            <a asp-page="@PagePaths.TransactionDetails" asp-route-id="@trans.Id"><i class="fa-solid fa-circle-info"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<div>
    @if (Model.Record.RecurringTransferId.HasValue) {
        <a class="btn btn-primary mb-2" asp-page="@PagePaths.RecurringTransferDetails" asp-route-id="@Model.Record.RecurringTransferId">
            Goto Recurring
        </a>
    }

    @if (Model.Record.ToTransaction != null) {
        <a class="btn btn-secondary mb-2" asp-page="@PagePaths.TransactionSplit" asp-route-parentId="@Model.Record.ToTransaction.Id">
            <i class="fa-solid fa-arrows-split-up-and-left"></i>
            @if (Model.Record.IsSplit) {
                <text>Edit Split</text>
            } else {
                <text>Split Transfer</text>
            }
        </a>
    }

    @if (Model.Record.IsSplit) {
        <a class="btn btn-outline-secondary mb-2" asp-page="@PagePaths.TransactionRemoveSplit" asp-route-parentId="@Model.Record.ToTransaction.Id">
            Remove Split
        </a>
    }
</div>