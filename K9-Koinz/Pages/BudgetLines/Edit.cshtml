@page
@using Models
@model K9_Koinz.Pages.BudgetLines.EditModel

@{
    ViewData["Title"] = "Edit Budget Line";
}

<h1>Edit</h1>

<h4>Budget Line</h4>
<hr />
<div class="row mb-3">
    <div class="col-md-4 mb-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Record.Id" />
            <div class="form-group">
                <label asp-for="Record.BudgetId" class="control-label"></label>
                <input type="text" value="@Model.Record.BudgetName" class="form-control" readonly />
                <input type="hidden" asp-for="Record.BudgetId" />
            </div>
            <div class="form-group">
                <label asp-for="Record.BudgetCategoryId" class="control-label"></label>
                <input type="text" value="@Model.Record.BudgetCategoryName" class="form-control" readonly />
                <input type="hidden" asp-for="Record.BudgetCategoryId" />
            </div>
            <div class="form-group">
                <label asp-for="Record.BudgetedAmount" class="control-label"></label>
                <input type="number" asp-for="Record.BudgetedAmount" class="form-control" min="1" />
                <span asp-validation-for="Record.BudgetedAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="form-check form-switch">
                    @Html.EditorFor(x => x.Record.GreenBarAlways, new { htmlAttributes = new { @class = "form-check-input" } })
                    <label class="form-check-label" asp-for="Record.GreenBarAlways"></label>
                </div>
            </div>
            <div class="form-group">
                <div class="form-check form-switch">
                    @Html.EditorFor(x => x.Record.DoRollover, new { htmlAttributes = new { @class = "form-check-input" } })
                    <label class="form-check-label" asp-for="Record.DoRollover"></label>
                </div>
            </div>
            <div class="form-group">
                <div class="form-check form-switch">
                    @Html.EditorFor(x => x.Record.ShowWeeklyLines, new { htmlAttributes = new { @class = "form-check-input" } })
                    <label class="form-check-label" asp-for="Record.ShowWeeklyLines"></label>
                </div>
            </div>
            <div class="form-group">
                <a asp-page="@PagePaths.BudgetEdit" asp-route-id="@Model.Record.BudgetId" class="btn btn-secondary">Cancel</a>
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
    @if (Model.Record.Budget.Timespan == BudgetTimeSpan.MONTHLY) {

        <div class="col-md-6">
            @if (Model.ChartError) {
                <p class="text-danger">There has been an error loading your spending chart.</p>
            } else {
                <div id="trendChartContainer" style="height: 350px; width: 100%; background-color: transparent;"></div>
            }
        </div>
    }
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Transactions List</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Merchant</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody id="transactionListBody">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.min.js"></script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        window.onload = () => {
            var chart = new CanvasJS.Chart("trendChartContainer", {
                animationEnabled: true,
                theme: "light1",
                title: {
                    text: "@Html.Raw(Model.Record.BudgetCategoryName) Spending"
                },
                axisY: {
                    title: "Amount"
                },
                data: [{
                    color: "#007bff",
                    type: "column",
                    dataPoints: @Html.Raw(Model.SpendingHistory),
                    click: function (evt) {
                        console.log(evt);
                        const columnLabelParts = evt.dataPoint.label.split("'");
                        $.ajax({
                            url: "/api/Transactions/GetTransactionsFromTrend",
                            data: {
                                categoryId: "@Model.Record.BudgetCategoryId",
                                month: columnLabelParts[0].trim(),
                                year: parseInt("20" + columnLabelParts[1].trim())
                            },
                            success: function (data) {
                                console.log(data);
                                $("#transactionListBody").empty();
                                for (let i = 0; i < data.length; i++) {
                                    const dynamicHtml = `
                                        <tr>
                                            <td>
                                                ${data[i].formattedDate}
                                            </td>
                                            <td>
                                                ${data[i].merchantName}
                                            </td>
                                            <td>
                                                ${data[i].formattedAmount}
                                            </td>
                                        </tr>
                                    `;

                                    $("#transactionListBody").append(dynamicHtml);
                                }
                                $("#exampleModal").modal("show");
                            }
                        });
                    }
                }]
            });
            chart.render();
        };
    </script>
}
