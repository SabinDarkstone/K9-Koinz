@page
@using Models
@model K9_Koinz.Pages.BudgetLines.EditModel

@{
    ViewData["Title"] = "Edit Budget Line";
}

<h1>Edit</h1>

<h4>Budget Line</h4>
<hr />
<div class="row mb-3">
    <div class="col-md-4 mb-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Record.Id" />
            <div class="form-group">
                <label asp-for="Record.BudgetId" class="control-label"></label>
                <input type="text" value="@Model.Record.BudgetName" class="form-control" readonly />
                <input type="hidden" asp-for="Record.BudgetId" />
            </div>
            <div class="form-group">
                <label asp-for="Record.BudgetCategoryId" class="control-label"></label>
                <input type="text" value="@Model.Record.BudgetCategoryName" class="form-control" readonly />
                <input type="hidden" asp-for="Record.BudgetCategoryId" />
            </div>
            <div class="form-group">
                <label asp-for="Record.BudgetedAmount" class="control-label"></label>
                <input type="number" asp-for="Record.BudgetedAmount" class="form-control" min="1" />
                <span asp-validation-for="Record.BudgetedAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="checkbox" asp-for="Record.GreenBarAlways" /> Always Show Bar as Green?
            </div>
            <div class="form-group">
                <input type="checkbox" asp-for="Record.DoRollover" /> Rollover Unspent Amount?
            </div>
            <div class="form-group">
                <a asp-page="@PagePaths.BudgetEdit" asp-route-id="@Model.Record.BudgetId" class="btn btn-secondary">Cancel</a>
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
    @if (Model.Record.Budget.Timespan == BudgetTimeSpan.MONTHLY) {

        <div class="col-md-6">
            @if (Model.ChartError) {
                <p class="text-danger">There has been an error loading your spending chart.</p>
            } else {
                <div id="trendChartContainer" style="height: 350px; width: 100%; background-color: transparent;"></div>
            }
        </div>
    }
</div>

@section Scripts {
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
          rel="Stylesheet" type="text/css" />

    <script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.min.js"></script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        window.onload = () => {
            var chart = new CanvasJS.Chart("trendChartContainer", {
                animationEnabled: true,
                theme: "light1",
                title: {
                    text: "@Html.Raw(Model.Record.BudgetCategoryName) Spending"
                },
                axisY: {
                    title: "Amount"
                },
                data: [{
                    color: "#007bff",
                    type: "column",
                    dataPoints: @Html.Raw(Model.SpendingHistory),
                }]
            });
            chart.render();
        };

        $(function () {
            $("#txtCategory").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Transactions/Create?handler=CategoryAutoComplete",
                        data: { text: request.term },
                        type: "GET",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(JSON.stringify(response));
                        },
                        failure: function (response) {
                            alert(JSON.stringify(response));
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfCategory").val(i.item.val);
                },
                minLength: 1
            });
        });
    </script>
}
