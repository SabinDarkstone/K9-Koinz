@page
@using K9_Koinz.Utils
@model K9_Koinz.Pages.Budgets.DetailsModel

@{
    ViewData["Title"] = "Budget Details";
}

<style scoped>
    .top-level {
        font-weight: bold;
    }
</style>

<h1>Details</h1>

<div>
    <h4>Budget</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Description)
        </dt>
        <dd class="col-sm-10">
            @if (string.IsNullOrEmpty(Model.Record.Description)) {
                <text>&nbsp;</text>
            } else {
                @Html.DisplayFor(model => model.Record.Description)
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.BudgetTagId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.BudgetTagName)
        </dd>
        @if (Model.Record.DoNotUseCategories) {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Record.BudgetedAmount)
            </dt>
            <dd class="col-sm-10">
                @Model.Record.BudgetedAmount.Value.FormatCurrency(0)
            </dd>
            <dt class="col-sm-2">
                Rollover?
            </dt>
            <dd class="col-sm-10">
                @if (Model.BudgetLines.First().Periods.Count == 0) {
                    <span>No</span>
                } else if (Model.BudgetLines.First().Periods.Count == 1) {
                    <span>Yes - Not Ready</span>
                } else {
                    <span>Active</span>
                }
            </dd>
        }

        @await Component.InvokeAsync(nameof(Components.DateFields), new {
            record = Model.Record
        })
    </dl>
</div>

@if (!Model.Record.DoNotUseCategories) {
    <h4>Budget Categories</h4>
    <div class="col-sm-5">
        <table class="table mt-2">
            <thead>
                <tr>
                    <th>Category Name</th>
                    <th>Budgeted Amount</th>
                    <th>Rollover?</th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var budgetLine in Model.BudgetLines) {
                    <tr>
                        <td>
                            @budgetLine.BudgetCategoryName
                        </td>
                        <td>
                            @budgetLine.BudgetedAmount.FormatCurrency(0)
                        </td>
                        <td>
                            @if (budgetLine.Periods.Count == 0) {
                                <span>No</span>
                            } else if (budgetLine.Periods.Count == 1) {
                                <span>Yes - Not Ready</span>
                            } else {
                                <span>Active</span>
                            }
                        </td>
                        <td>
                            <a asp-page="@PagePaths.BudgetLineEdit" asp-route-id="@budgetLine.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<div>
    <a asp-page="@PagePaths.BudgetEdit" asp-route-id="@Model.Record.Id" class="btn btn-primary mb-2">
        <i class="fa-solid fa-pen-to-square"></i> Edit
    </a>
    <a asp-page="@PagePaths.BudgetDelete" asp-route-id="@Model.Record.Id" class="btn btn-danger mb-2">
        <i class="fa-solid fa-trash"></i> Delete
    </a>
</div>

<a asp-page="@PagePaths.BudgetIndex">Back to List</a>