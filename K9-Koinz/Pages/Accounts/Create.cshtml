@page
@using Models
@model K9_Koinz.Pages.Accounts.CreateModel

@{
    ViewData["Title"] = "Create New Account";
}

<h1>Create</h1>

<h4>Account</h4>
<hr />

@await Component.InvokeAsync(nameof(Components.PageInstructions), new {
        topicName = "CreateAccount"
    })

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.FloatingFormInput(model => Model.Record.Name)
            @Html.FloatingFormInput(model => Model.Record.Description)
            <div class="form-group form-floating">
                <select asp-for="Record.Type" class="form-control" asp-items="@Html.GetEnumSelectList<AccountType>()">
                    <option value="" selected disabled>Account Type</option>
                </select>
                <label asp-for="Record.Type"></label>
                <span asp-validation-for="Record.Type" class="text-danger"></span>
            </div>
            @Html.FloatingFormInput(model => Model.Record.InitialBalance, "number")
            @Html.FloatingFormInput(model => Model.Record.InitialBalanceDate, "date")
            @Html.FloatingFormInput(model => Model.Record.MinimumBalance, "number")

            @Html.SubmitButton()
        </form>
    </div>
</div>

<div>
    <a asp-page="@PagePaths.AccountIndex">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
