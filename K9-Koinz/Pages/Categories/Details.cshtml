@page
@model K9_Koinz.Pages.Categories.DetailsModel

@{
    ViewData["Title"] = "Category Details";
}

<h1>Details</h1>

<div>
    <h4>Category</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Record.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Record.FontAwesomeIcon)
        </dt>
        <dd class="col-sm-10">
            @if (!string.IsNullOrEmpty(Model.Record.FontAwesomeIcon)) {
                <i class="fa-solid @Model.Record.FontAwesomeIcon"></i>
            } else {
                <text>No icon selected</text>
            }
        </dd>
        @if (Model.Record.ChildCategories.Any()) {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Record.ChildCategories)
            </dt>
            <dd class="col-sm-10">
                <ul>
                    @foreach (var child in Model.Record.ChildCategories.OrderBy(cCat => cCat.Name)) {
                        <li>
                            @child.Name
                            <a asp-page="@PagePaths.CategoryDetails" asp-route-id="@child.Id">
                                <i class="fa-solid fa-circle-info"></i>
                            </a>
                        </li>

                    }
                </ul>
            </dd>
        }
        @if (Model.Record.IsChildCategory) {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Record.ParentCategoryId)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Record.ParentCategoryName)
            </dd>
        }
    </dl>
</div>

@if (Model.Record.CategoryType == CategoryType.EXPENSE) {
    <div class="mb-4">
        <div class="col-md-6">
            @if (Model.ChartError) {
                <p class="text-danger">There has been an error loading your spending chart.</p>
            } else {
                <div id="trendChartContainer" style="height: 300px; width: 100%; background-color: transparent;"></div>
            }
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Transactions List</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Merchant</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody id="transactionListBody">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-page="@PagePaths.CategoryEdit" asp-route-id="@Model.Record.Id" class="btn btn-primary mb-2">
        <i class="fa-solid fa-pen-to-square"></i> Edit
    </a>

    @if (Model.Record.ParentCategoryId.HasValue) {
        <a asp-page="@PagePaths.CategoryDetails" asp-route-id="@Model.Record.ParentCategoryId" class="btn btn-secondary mb-2">
            Go to Parent
        </a>
    }
</div>

@section Scripts {
    <script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.min.js"></script>

    <script type="text/javascript">
        window.onload = () => {
            var chart = new CanvasJS.Chart("trendChartContainer", {
                animationEnabled: true,
                theme: "light1",
                title: {
                    text: "@Html.Raw(Model.Record.Name) Spending"
                },
                axisY: {
                    title: "Amount"
                },
                data: [{
                    color: "#007bff",
                    type: "column",
                    dataPoints: @Html.Raw(Model.SpendingHistory),
                    click: function (evt) {
                        console.log(evt);
                        const columnLabelParts = evt.dataPoint.label.split("'");
                        $.ajax({
                            url: "/api/Transactions/GetTransactionsFromTrend",
                            data: {
                                categoryId: "@Model.Record.Id",
                                month: columnLabelParts[0].trim(),
                                year: parseInt("20" + columnLabelParts[1].trim())
                            },
                            success: function (data) {
                                console.log(data);
                                $("#transactionListBody").empty();
                                for (let i = 0; i < data.length; i++) {
                                    const dynamicHtml = `
                                                        <tr>
                                                            <td>
                                                                ${data[i].formattedDate}
                                                            </td>
                                                            <td>
                                                                ${data[i].merchantName}
                                                            </td>
                                                            <td>
                                                                ${data[i].formattedAmount}
                                                            </td>
                                                        </tr>
                                                    `;

                                    $("#transactionListBody").append(dynamicHtml);
                                }
                                $("#exampleModal").modal("show");
                            }
                        });
                    }
                }]
            });
            chart.render();
        };
    </script>
}