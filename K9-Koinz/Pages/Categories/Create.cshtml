@page
@using Models
@model K9_Koinz.Pages.Categories.CreateModel

@{
    ViewData["Title"] = "Create New Category";
}

<h1>Create</h1>

@if (Model.ParentCategory == null) {
    <h4>Category</h4>
} else {
    <h4>Child Category</h4>
}
<hr />

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (Model.ParentCategory != null) {
                <div class="form-group">
                    <label asp-for="Record.ParentCategoryId" class="control-label"></label>
                    <input type="text" value="@Model.ParentCategory.Name" class="form-control" readonly />
                    <input type="hidden" asp-for="Record.ParentCategoryId" value="@Model.ParentCategory.Id" readonly />
                </div>
            }
            <div class="form-group">
                <label asp-for="Record.Name" class="control-label"></label>
                <input asp-for="Record.Name" class="form-control" />
                <span asp-validation-for="Record.Name" class="text-danger"></span>
            </div>
            @if (Model.ParentCategory == null) {
                <div class="form-group">
                    <label asp-for="Record.ParentCategoryId" class="control-label"></label>
                    <input id="txtParentCategory" class="form-control" />
                    <input asp-for="Record.ParentCategoryId" type="hidden" id="hfCategory" />
                    <span asp-validation-for="Record.ParentCategoryId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Record.CategoryType" class="control-label"></label>
                    <select asp-for="Record.CategoryType" class="form-control" asp-items="@Html.GetEnumSelectList<CategoryType>()"></select>
                    <span asp-validation-for="Record.CategoryType" class="text-danger"></span>
                </div>
            } else {
                <div class="form-group">
                    <label asp-for="Record.CategoryType" class="control-label"></label>
                    <input type="text" asp-for="Record.CategoryType" value="@Model.ParentCategory.CategoryTypeName" class="form-control" readonly />
                </div>
            }
            <div class="form-group">
                <button type="submit" class="btn btn-primary my-2">
                    <i class="fa-solid fa-floppy-disk"></i> Create
                </button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="@PagePaths.CategoryIndex">Back to List</a>
</div>

@section Scripts {
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
          rel="Stylesheet" type="text/css" />

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(function () {
            $("#txtParentCategory").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Categories/Create?handler=CategoryAutoComplete",
                        data: { text: request.term },
                        type: "GET",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(JSON.stringify(response));
                        },
                        failure: function (response) {
                            alert(JSON.stringify(response));
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfCategory").val(i.item.val);
                },
                minLength: 1
            });
        });
    </script>
}
